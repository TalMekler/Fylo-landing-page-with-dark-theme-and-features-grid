.hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    background: $primary-clr1;
    .bg-bottom {
        position: absolute;
        width: 100%;
        height: 100%;
        bottom: 0;
        left: 0;
        z-index: 0;
        background: url(/images/bg-curvy-desktop.svg);
        background-repeat: no-repeat;
        background-position: 0 100%;

        @include window_maxWidth(rem(375)) {
            background: url(/images/bg-curvy-mobile.svg);
            background-repeat: no-repeat;
            background-position: 0 100%;
        }
    }
    .water-mark {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background: url(../talmekler-svg.svg);
        background-repeat: no-repeat;
        background-size: contain;
        background-position: 10rem -5rem;
        opacity: 0.07;
        pointer-events: none;
        filter: invert(1);
    }

    .img-wrapper {
        width: rem(720);
        height: auto;
        margin-bottom: rem(45);
        z-index: 2;
        @include window_maxWidth(rem(375)) {
            width: rem(275);
        }

        img {
            width: 100%;
            height: 100%;
        }
    }

    &__content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        z-index: 2;

        .heading {
            text-align: center;
            max-width: rem(684);
            font-size: rem(32);
            line-height: rem(48);
            color: white;
            font-weight: $fw2;
            margin-bottom: rem(20);
        }

        &__main {
            color: white;
            text-align: center;
            max-width: rem(582);
            font-size: rem(19);
            line-height: rem(28);
            opacity: 0.75;
            margin-bottom: rem(34);
            @include window_maxWidth(rem(375)) {
                padding-left: rem(30);
                padding-right: rem(30);
            }
        }

        a {
            padding: rem(16) rem(95);
            color: white;
            background: linear-gradient(90deg, $accent-clr1, $accent-clr2);
            border-radius: rem(30);
            border: 0;
            outline: 0;
            transition: all 0.25s ease-in-out;
            margin-bottom: rem(159);

            &:hover {
                filter: brightness(1.4);
            }
        }
    }
}

svg.svg-check {
    z-index: 123123123;
    overflow: visible;
    transform: rotate(30deg) rotateY(30deg);
    opacity: 0.75;
    animation: tzaf 2s infinite 5.25s alternate ease-in-out;
    transition: all .5s ease-in-out;

    * {
        --i: 0;
    }

    #bg {
        transform: scale(0);
        transform-origin: center;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 2);
        &.show {
            transform: scale(1);
        }
    }
    #img {
        transform: scale(0);
        transform-origin: top left;
        transition: all 0.75s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: 1.25s;
        &.show {
            transform: scale(1);
        }
    }

    #l1 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l2 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l3 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l4 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l5 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l6 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l7 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l8 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l9 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l10 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
    #l11 {
        transform: scale(0);
        transform-origin: left;
        transition: all 1s cubic-bezier(0.73, -0.08, 0.46, 1.71);
        transition-delay: calc(2s + (var(--i) * 0.2s));
        &.show {
            transform: scale(1);
        }
    }
}

@keyframes tzaf {
    from {
        transform: translateY(rem(0)) rotate(30deg) rotateY(30deg);
    }
    to {
        transform: translateY(rem(10)) rotate(30deg) rotateY(30deg);
    }
}
